# --- Render Blueprint file version ---
services:
  # Spring main application (API)
  - name: app
    type: web
    env: docker
    dockerfilePath: ./Dockerfile
    buildCommand: ""
    startCommand: ""
    plan: free
    envVars:
      - key: SPRING_PORT
        value: "8080"
    ports:
      - 8080
    dependencies:
      - db
      - elasticsearch
      - kibana
    mounts:
      - type: volume
        name: app-logs
        path: /app/logs
    healthCheckPath: /

  # Database (MySQL)
  - name: db
    type: privateService
    env: docker
    dockerfilePath: ./db/Dockerfile
    ports:
      - 3306
    plan: free

  # Elasticsearch
  - name: elasticsearch
    type: privateService
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    envVars:
      - key: discovery.type
        value: "single-node"
    ports:
      - 9200
    mounts:
      - type: volume
        name: es-data
        path: /usr/share/elasticsearch/data
    plan: free

  # Kibana
  - name: kibana
    type: privateService
    image: docker.elastic.co/kibana/kibana:7.9.1
    ports:
      - 5601
    dependencies:
      - elasticsearch
    plan: free

  # Filebeat
  - name: filebeat
    type: privateService
    dockerfilePath: ./logs/filebeat/Dockerfile
    mounts:
      - type: volume
        name: app-logs
        path: /app/logs:ro
      - type: volume
        name: docker-containers
        path: /var/lib/docker/containers:ro
      - type: volume
        name: docker-socket
        path: /var/run/docker.sock:ro
    dependencies:
      - elasticsearch
    plan: free

volumes:
  - name: es-data
  - name: app-logs
  - name: docker-containers
  - name: docker-socket
