name: Build, Publish, and Test Docker Images

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: ghcr.io/${{ github.repository }}:db
        ports:
          - 3306:3306
        options: >-
          --env MYSQL_ROOT_PASSWORD=root_password
          --env MYSQL_DATABASE=wwtdb
          --env MYSQL_USER=wwt
          --env MYSQL_PASSWORD=wwt_password
          --name test-db
          
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        ports:
          - 9200:9200
        options: >-
          --env discovery.type=single-node
          --name test-elasticsearch

      app:
        image: ghcr.io/${{ github.repository }}:app
        ports:
          - 8080:8080
        options: >-
          --name test-app
        depends_on:
          - db
          - elasticsearch

      filebeat:
        image: ghcr.io/${{ github.repository }}:filebeat
        options: >-
          --name test-filebeat
        depends_on:
          - elasticsearch

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker images
      run: |
        docker build -t ghcr.io/${{ github.repository }}:db ./db
        docker build -t ghcr.io/${{ github.repository }}:filebeat ./logs/filebeat
        docker build -t ghcr.io/${{ github.repository }}:app ./app

    - name: Push Docker images
      run: |
        docker push ghcr.io/${{ github.repository }}:db
        docker push ghcr.io/${{ github.repository }}:filebeat
        docker push ghcr.io/${{ github.repository }}:app

    - name: Verify the images
      run: |
        docker pull ghcr.io/${{ github.repository }}:db
        docker pull ghcr.io/${{ github.repository }}:filebeat
        docker pull ghcr.io/${{ github.repository }}:app

    - name: Run and Test Containers
      run: |    
        docker-compose -f docker-compose.yml up -d  
        sleep 60    
        curl -f http://localhost:8080/
        curl -f http://localhost:9200

    - name: Stop Containers after Tests
      run: |
        docker-compose -f docker-compose.yml down

